Constraint Removal for MPC with Performance Preservation
and a Hyperthermia Cancer Treatment Case Study
S.A.N. Nouwens1, B. de Jager1, M.M. Paulides2,3, W.P.M.H. Heemels1
©2021 IEEE. Personal use of this material is permitted. Permission from IEEE must be obtained for all other uses, in any current or future media,
including reprinting/republishing this material for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers
or lists, or reuse of any copyrighted component of this work in other works. DOI: 10.1109/CDC45484.2021.9683158
Abstract— Model
predictive
control
(MPC)
is
an
optimization-based
control
strategy
with
broad
industrial
adoption. Unfortunately, the required computation time to
solve the receding-horizon MPC optimization problem can
become prohibitively large for many applications with a
large number of state constraints. This large number of
state constraints can, for instance, originate from spatially
discretizing a partial differential equation of which the solution
has to satisfy constraints over the full spatial domain. This
is particularly the case in MPC for RF-based hyperthermia
cancer treatments, which forms a strong motivation for this
study. To address this problem, we propose a novel constraint-
adaptive MPC framework for linear discrete-time systems. In
this framework, we select at each time-step a subset of the
state constraints that are included in the optimization problem,
thereby reducing the online computational burden. Critically,
our framework guarantees the same closed-loop performance,
recursive feasibility, and constraint satisfaction properties as
the original (non-reduced) MPC scheme. We achieve this result
by efficiently exploiting reachable set computations and the
MPC cost function. We will demonstrate our novel method
using a hyperthermia cancer treatment case study showing
a
two-orders
of
magnitude
improvement
in
computation
time, with identical closed-loop performance as the original
(non-reduced) MPC scheme.
I. INTRODUCTION
Model
predictive
control
(MPC)
is
a
successful,
optimization-based, control technology [1]. Generally, the
control inputs are obtained by recursively optimizing a finite-
horizon cost function subject to input and state constraints
and system dynamics. The explicit inclusion of state and
inputs constraints and the capability to handle multi-input
multi-output systems are distinct advantages of MPC. How-
ever, solving an optimization problem at each time-step
can prohibit the real-time feasibility of the controller for
computationally complex scenarios. Particularly, in applica-
tions requiring the control of systems modeled by partial
differential equations with constraints on the continuous
spatial domain, such as the heat equation for hyperthermia
cancer treatments, the real-time application of MPC can be
problematic.
Efforts to improve the computational aspects of MPC
are commonplace with among others, explicit MPC, model
This research is supported by KWF Kankerbestrijding and NWO Domain
AES, as part of their joint strategic research programme: Technology for
Oncology II. The collaboration project is co-funded by the PPP Allowance
made available by Health∼Holland, Top Sector Life Sciences & Health, to
stimulate public-private partnerships.
1Control Systems Technology, Department of Mechanical Engineering,
Eindhoven University of Technology, Eindhoven, The Netherlands
2Electromagnetics for Care & Cure, Department of Electrical Engineer-
ing, Eindhoven University of Technology, Eindhoven, The Netherlands
3Department of Radiotherapy, Erasmus University Medical Center Cancer
Institute, Rotterdam, The Netherlands
reduction, and tailored numerical solvers, see, e.g., [2]–[6],
and the references therein. However, our focus in this paper is
on systems with large-scale constraints. For such systems, the
aforementioned techniques are typically not highly effective.
In particular, interior-point methods are reported to scale
linearly with the number of inequality constraints [5]. As
a result, systems with many constraints motivate so-called
constraint removal techniques, which are roughly separated
into offline [7], and online methods [8]–[10]. Offline methods
can be prohibitively complex to compute and possibly do not
enable real-time MPC, as constraints can only be removed
if they are redundant with respect to all feasible states.
In contrast, online techniques can typically remove more
constraints as they exploit the knowledge of the current state
of the system. However, online methods use a so-called
pre-solve step whose additional computation time cannot
be ignored and should be limited. Although the existing
online constraint removal techniques are effective in various
scenarios, they still require extensive computational effort
for large-scale problems, or do not provide performance
guarantees.
In this paper, we propose a novel online constraint removal
method for MPC of linear discrete-time systems that is com-
putationally tractable and guarantees the same closed-loop
performance, recursive feasibility, and constraint satisfaction
as the original MPC scheme. To this end, we exploit proper-
ties inherent to the system by using fast reachability analysis
and the optimal control sequence from the previous time step
to systematically remove constraints from the optimization
problem. We will show the strengths of our new framework
using a hyperthermia cancer treatment case study [11]–
[14], where we obtain a two-orders of magnitude reduction
in computational time. Note that existing work on MPC
for hyperthermia is largely focused on ultrasound heating
and localized 2D models, which limits their application to
small tumors [11], [14]. In contrast, radio frequency based
(RF) hyperthermia, used for larger tumors, requires large-
scale 3D models due to the non-localized heating from the
actuators [12]. The non-local heating also introduces the need
for temperature constraints on the whole spatial domain to
ensure patient safety. For these reasons, MPC for RF-based
hyperthermia is computationally challenging.
The remainder of this paper is structured as follows.
We start by introducing the preliminaries in Section II. In
Section III, we provide our ca-MPC scheme that exploits
reachable sets and the cost function to remove constraints
without changing the optimizer of the MPC problem, after
which, we provide computationally cheap methods to remove
state constraints in Section IV. The hyperthermia cancer
arXiv:2410.17639v1  [eess.SY]  23 Oct 2024
treatment case study is presented in Section V. Finally,
conclusions are stated in Section VI.
II. PRELIMINARIES
In this section, we introduce the linear system to be
controlled, a typical MPC setup, the forward and backward
reachable sets and the cost function level sets. These sets
form the basis of our constraint removal framework.
A. System
In this paper, we consider plants that are described by the
discrete-time linear time-invariant (LTI) system
xk+1 = Axk + Buk.
(1)
Here, xk ∈Rn and uk ∈Rm denote the plant states and
the inputs, respectively, at discrete time k ∈N. Furthermore,
A and B are real matrices of appropriate dimensions. The
system (1) is subject to polyhedral state and input constraints
that are given by
xk ∈{x ∈Rn | Cx ≤b}
=: X,
(2a)
uk ∈{u ∈Rm | Cuu ≤bu}
=: U.
(2b)
Here, X and U are assumed to be non-empty polyhedral sets
with C ∈Rnx×n, Cu ∈Rnu×m, b ∈Rnx, and bu ∈Rnu.
In this paper we are interested in systems constrained by
many state constraints, i.e., nx ≫1.
B. MPC setup
Based on the system dynamics (1) and constraints (2), a
common MPC setup, given state xk at time k ∈N, can be
formulated as
minimize
Uk
J(xk, Uk),
(3a)
subject to
Xk = Φxk + ΓUk,
(3b)
Xk ∈X × · · · × X
|
{z
}
N−1 times
×XT
=: XN,
(3c)
Uk ∈U × · · · × U
|
{z
}
N times
=: UN,
(3d)
where
J(xk, Uk) := ℓT (xN|k) + PN−1
i=0 ℓ(xi|k, ui|k),
(4a)
Xk := [x⊤
1|k . . . x⊤
N|k]⊤,
(4b)
Uk := [u⊤
0|k . . . u⊤
N−1|k]⊤,
(4c)
Φ :=


A
A2
...
AN

, Γ :=


B
0
. . .
0
AB
B
. . .
0
...
...
...
...
AN−1B AN−2B . . . B

. (4d)
Here, ℓ(·), ℓT (·), xi|k, ui|k, and XT denote the stage cost,
the terminal cost, the predicted state, the predicted input,
and the polyhedral terminal set, respectively. The termi-
nal set satisfies XT := {x ∈Rn | CT x ≤bT } ⊆X, where
CT ∈RnT ×n and bT ∈RnT , which is positively invariant
with respect to U for some auxiliary control law u = Kx,
i.e., (A + BK)XT
⊆XT and KXT
⊆U. The i|k
subscript is used to denote the i-th prediction at time k.
For example, xi|k denotes the prediction of xk+i made at
time k for i = 1, 2, . . . , N, where N denotes the prediction
horizon. Additionally, the stage and terminal cost quantify
the performance in terms of the predicted states xi|k and
inputs ui−1|k for i = 1, 2, . . . , N.
For the optimization problem (3), we denote the set of
feasible inputs parameterized by the state xk by
Uf,N(xk) := {Uk ∈UN | (3b) −(3d)}.
(5)
Moreover, we denote the set of feasible states by
Xf := {x ∈X | Uf,N(x) ̸= ∅}.
(6)
Finally, note that under suitable assumptions on ℓ(·) and
ℓT (·), for all xk ∈Xf a minimizer of (3) exists and we
denote by U ⋆
k := [u⋆⊤
0|k . . . u⋆⊤
N−1|k]⊤a particular one at
time k ∈N, i.e.,
U ⋆
k ∈
arg min
Uk∈Uf,N(xk)
J(xk, Uk).
(7)
The optimal predicted state sequence corresponding to U ⋆
k
is denoted by X⋆
k = [x⋆⊤
1|k . . . x⋆⊤
N|k]⊤= Φxk + ΓU ⋆
k.
Using a receding horizon implementation, the MPC prob-
lem (3) is turned into a feedback law KMPC : Xf →U by
applying the first computed input in U ⋆
k on the real plant
(1), i.e., uk := KMPC(xk) := u⋆
0|k.
C. Forward and backward reachable sets
We define the forward reachable set −→
Rk(X0, U) for initial
state set X0 ⊆Rn as the collection of all states reachable
from states in X0 in k ∈N time-steps subject to the system
dynamics (1) and input constraints (2b). More precisely, the
forward reachable set for (1), (2b), and initial state set X0
can be computed using the recursion
−→
Rk+1(X0, U) :={x+ ∈Rn | x+ = Ax + Bu,
(8)
for some x ∈−→
Rk(X0, U), and u ∈U}, k ∈N,
where −→
R0(X0, U) := X0. Similarly, the backward reachable
set ←−
Rk(XT , U) for a given terminal set at time N ∈N,
XT ⊆X, is obtained through a backwards recursion
←−
Rk−1(XT , U) := {x ∈Rn | Ax + Bu ∈←−
Rk(XT , U) (9)
for some u ∈U}, k ∈N[1,N],
where ←−
RN(XT , U) := XT . Note that the definitions for the
forward and backward reachable sets do not include the state
constraints, but do include the input constraints.
Last, for ease of notation, we define forward and backward
reachable tubes as
−→
R(X0, U) := −→
R1(X0, U) × · · · × −→
RN(X0, U),
(10a)
←−
R(XT , U) := ←−
R1(XT , U) × · · · × ←−
RN−1(XT , U) × Rn.
(10b)
Note that, in (10b) we replace ←−
RN(XT , U) with Rn to ensure
we do not remove terminal constraints with XT itself.
D. Cost function level set
Besides the forward and backward reachable sets, we will
also exploit the cost function level set to remove constraints
from (3c). The key observation is that for state xk ∈Xf
and any given input sequence ˜Uk ∈Uf,N(xk), an upper
bound for the MPC cost function can be easily obtained as
J(xk, U ⋆
k) ≤J(xk, ˜Uk). More precisely, this upper bound
defines a cost function level set
Ju(xk, ˜Uk) :={U ∈RNm | J(xk, U) ≤J(xk, ˜Uk)}. (11)
For the well-known case where J(x, U) is a quadratic cost
function such that
ℓ(x, u) = x⊤Qx + u⊤Ru,
ℓT (x) = x⊤P x,
(12)
with Q, R, and P positive-definite matrices, the resulting
level set (11) is an ellipse in RNm as a function of xk, ˜Uk.
Using (3b), it is also possible to define a cost function
level set for state trajectories in RNn,
Jx(xk, ˜Uk) := {Φxk + ΓU | U ∈Ju(xk, ˜Uk)}.
(13)
III. CONSTRAINT REMOVAL USING REACHABLE SETS
AND COST FUNCTION LEVEL SETS
Generally, given a convex MPC problem, it is known
that there exist exactly at most Nm so-called support con-
straints whose removal changes the minimizer [15]. However,
removing all but these state-dependent support constraints
is time-consuming. Nevertheless, it is possible to improve
the computational complexity of (3) by removing only a
subset of the non-support constraints. Clearly, this speeds
up the MPC problem without impacting the closed-loop
performance, recursive feasibility, and constraint satisfaction.
We start with the observation that we can remove
state constraints that are either, not forward- or backward-
reachable, or correspond to state trajectories that do not
lower the MPC cost below J(x, ˜Uk). To start exploiting this
observation, we define the set
H(xk, ˜Uk) := −→
R(xk, U) ∩←−
R(XT , U) ∩Jx(xk, ˜Uk). (14)
Definition 1: A
constraint
cjx
≤
bj
is
called
(xk, U, XT , ˜Uk)-redundant (or redundant for short) at time
i ∈N[1,N] for system (1), if
[x⊤
1|k . . . x⊤
N|k]⊤∈H(xk, ˜Uk) =⇒cjxi|k ≤bj.
(15)
Loosely speaking, the constraint cjxi|k ≤bj, where C :=
[c⊤
1 , . . . , c⊤
nx]⊤and b := [b1, . . . , bnx]⊤, is redundant at time
i, if system dynamics, input constraints, terminal set, and
MPC cost function already guarantee its satisfaction. Clearly,
if cjxi|k ≤bj is redundant at time i, it can be removed from
the MPC problem without changing the minimizer.
Definition 2: A set X red
N := Xred
1 × · · · × Xred
N is called a
reduced constraint set for XN, if there are index sets
Ai ⊆N[1,nx], for i = 1, 2, . . . , N −1, such that
Xred
i
= {x ∈Rn | cjx ≤bj, for j ∈Ai}.
(16a)
For i = N, we define index sets AN ⊆N[1,nT ] such that
Xred
N = {x ∈Rn | cT,jx ≤bT,j, for j ∈AN},
(16b)
where
CT
:=
[c⊤
T,1, . . . , c⊤
T,nT ]⊤
and
bT
:=
[bT,1, . . . , bT,nT ]⊤.
From the above reasoning the next result follows.
Proposition 1: Consider a reduced constraint set X red
N for
XN. If for initial state xk ∈Xf and ˜Uk ∈Uf,N(xk) it holds
that
H(xk, ˜Uk) ∩XN = H(xk, ˜Uk) ∩X red
N ,
(17)
then the MPC problem, where (3c) is replaced by Xk ∈X red
N ,
has the same minimizer as the original MPC problem, i.e.,
arg min
Uk∈Uf,N(xk)
J(xk, Uk) =
arg min
(3b), Uk∈UN Xk∈X red
N
J(xk, Uk). (18)
IV. NUMERICALLY EFFICIENT CONSTRAINT REDUCTION
In this section, we provide numerically efficient proce-
dures to remove state constraints based on the observations
in Section III. While Section III describes conditions that
can be used to remove redundant constraints, we need
efficient and fast techniques to carry out the corresponding
calculations online. To this end, we first show that outer
approximations of the reachable sets and the cost function
level set can be exploited in our ca-MPC framework. Second,
we provide numerically efficient methods for computing such
outer approximations of reachable sets. Finally, we present
a method to efficiently construct suitable reduced constraints
sets X red
N
based on these computational methods.
A. Outer approximations in constraint removal
In this section, we show that using outer approximations
of H(xk, ˜Uk) can be exploited in our framework.
Corollary 1: Consider
an
outer
approximation
of
H(xk, ˜Uk) in the sense that H(xk, ˜Uk) ⊆H+(xk, ˜Uk). If
H+(xk, ˜Uk) ∩XN = H+(xk, ˜Uk) ∩X red
N
(19)
holds for a reduced constraint set X red
N
of XN, then (17)
holds and thus (18).
Clearly, X red
N
obtained by removing constraints based on
the outer approximation H+(xk, ˜Uk) has an equal or larger
number of constraints than a reduced constraint set that is
computed without outer approximations. However, outer ap-
proximations can be exploited in our framework by providing
a beneficial trade-off between the computational effort of
removing redundant constraints and the associated speedup
of the MPC problem.
B. Reachable set outer approximations
Computing reachable sets is known to be a computation-
ally intensive task. However, we will exploit an important
feature of reachable sets for LTI systems that will make these
computations tractable. For ease of exposition, we limit our-
selves to the forward reachable set in the explanation below,
but the same properties apply to the backward reachable set,
mutatis mutandis.
A key feature of reachable sets for LTI systems is the
decomposition −→
R(x, U) = Φx + −→
R(0, U). Here, Φx is
the free state response with initial condition x and zero
input sequence, while −→
R(0, U) is the forward reachable tube
starting at the origin. Crucially, −→
R(0, U) does not depend
on the current state and can therefore be computed offline,
thereby lowering the online computational burden drastically.
Even though the forward reachable tube can be computed
offline, it is not necessarily easy and the complexity of
the set itself can be intractable in some cases. In such
cases, the use of outer approximations of reachable sets
can be useful and render the computations tractable while
simultaneously lowering the complexity of the set itself. The
reduced complexity of the sets themselves will be extensively
used to adaptively remove redundant constraints in our ca-
MPC framework detailed in Section IV-C.
In this paper, we limit ourselves to bounding boxes and
outer ellipsoidal approximations of the reachable sets, al-
though the main ideas also apply to other shapes. A bounding
box approximates the forward reachable tube such that
B(P1, q1, l1) × · · · × B(PN, qN, lN) ⊇−→
R(0, U),
(20a)
B(P , q, l) := {x ∈Rn | −l ≤P (x −q) ≤l}.
(20b)
Here, P1, . . . , PN are invertible matrices and l1, . . . , lN non-
negative vectors of appropriate dimension. Similarly, an outer
ellipsoidal approximation satisfies
E(L1, q1) × · · · × E(LN, qN) ⊇−→
R(0, U),
(21a)
E(L, q) := {x ∈Rn | ∥L⊤(x −q)∥2 ≤1}.
(21b)
Here,
L1, . . . , LN
are
positive-definite
matrices
and
q1, . . . , qN vectors of appropriate dimension. These outer
approximations allow for simple set descriptions that can
be used to remove redundant constraints efficiently as we
will show. In particular, recent developments in ellipsoidal
methods allow for numerically efficient reachable set com-
putations, even for large-scale systems [16].
C. Numerically efficient constraint removal
In this section, we use the previously introduced outer
approximations to derive efficient methods to identify re-
dundant state constraints. Recall, that redundant constraints
can be identified by verifying if the reduced constraint set
satisfies (19). One approach to identify and remove a redun-
dant constraint is by solving an optimization problem for
each inequality constraint [7]. However, these optimization
problems are computationally expensive, therefore, we limit
ourselves to numerically efficient, albeit more conservative
tests. More specifically, we remove an inequality constraint
given by cX ≤b, when
{X ∈RNn | cX ≤b} ∩H(xk, ˜Uk) = H(xk, ˜Uk)
(22)
Checking (22) is equivalent to verifing
X ∈H(xk, ˜Uk) =⇒cX ≤b.
(23)
Next, we elaborate on (23) for box-shaped and ellipsoidal
sets, respectively. At the end of this section, we also discuss
how a finite intersections and products of boxes and ellipses
can be handled efficiently.
In the box case, we would like to test if
X ∈B(P , q, l) =⇒cX ≤b,
(24)
where B(P , q, l) is an Nn-dimensional box-shaped set.
In
case
(24)
holds,
we
set
the
test
outcome
of
MB(c, b, B(P , q, l)) to true (the constraint can be removed),
otherwise we set it to false. Elementary calculations show
that (24) is true if and only if
cP −1(sign(P −⊤c⊤) ◦l) ≤|b −cq|,
(25)
where sign(·) denotes the element-wise sign and ◦the
element wise product. Similar, for ellipses we have
X ∈E(L, q) =⇒cX ≤b,
(26)
and thus the constraint can be removed if (26) holds. Again,
elementary calculations show that (26) holds if and only if
∥cL−⊤∥2 ≤|b −cq|.
(27)
Hence, we define ME(c, b, E(L, q)) ⇐⇒(27).
Based on the definition of H(xk, ˜Uk) (14), it is convenient
to extend our constraint removal framework to intersections
of boxes and ellipses,
H(xk, ˜Uk) = T
p∈N[1,M] H(p, xk, ˜Uk),
(28)
where H(p, xk, ˜Uk) is either a box or an ellipse for p ∈
N[1,M]. Observe that when a constraint cX ≤b is redundant
for some p ∈N[1,M], i.e., X ∈H(p, xk, ˜Uk) =⇒cX ≤b,
then (23) also holds. Hence, the constraint can be removed.
Crucially,
(28)
enables
the
removal
of
redundant
constraints using simpler and faster, sequential redun-
dancy checks based on H(p, xk, ˜Uk). Additionally, when
H(xk, ˜Uk) is given by
H(xk, ˜Uk) = H1(xk, ˜Uk) × · · · × HN(xk, ˜Uk),
(29)
as is for the reachable tubes (10), then it is also possible
to process Hi(xk, ˜Uk) and corresponding constraint set Xred
i
sequentially for each time i = 1, 2, . . . , N.
V. CASE STUDY: HYPERTHERMIA TREATMENT
In this section, we demonstrate our proposed ca-MPC
framework for numerically efficient constraint removal with
a hyperthermia cancer treatment case study. A hyperthermia
treatment involves heating a tumor thereby inducing a local
fever. As a result, the tumor is sensitized to radio and chemo
therapies, making these therapies more effective [11]–[14].
Critically, tissue temperature constraints ensure the safety
and comfort of the patient [17]. The temperature constraint
is defined on the continuous spatial domain and therefore
results in many state constraints after spatial discretization,
which is a typical scenario for MPC-based PDE control.
The remainder of this section is structured as follows.
First, the system dynamics and MPC problem are introduced.
Second, the ca-MPC relevant sets are computed. Last, we
compare the results obtained using ca-MPC and the original
non-reduced MPC setup.
A. System description
We model the system dynamics in the hyperthermia case
study using the 1D heat equation with distributed control,
convective boundary conditions, and additional convection
on the spatial domain to model the body’s thermoregulatory
response. This leads for the normalized spatial coordinates
r ∈[0, 1] and time t ∈R≥0 to
˙T(r, t) = α∇2T(r, t) −βT(r, t) + Q(r, t),
(30a)
Q(r, t) = B1(r)u1(t) + B2(r)u2(t)
(30b)
with boundary conditions
∇T(0, t) = γT(0, t),
∇T(1, t) = −γT(1, t).
(31)
The parameters are given by α = 2.5 · 10−4, β = 10−2,
and γ = 2.5 · 10−3. Note that the 1D setup enables the
comparison with a non-reduced MPC setup, which would
become intractable for 2D and 3D cases.
To ensure patient safety and efficacy of the treatment,
we constrain the healthy tissue temperature increase to five
degrees with respect to the body temperature and seven
degrees for the tumor on r ∈[0.6, 0.9]. This constraint is
illustrated in Fig. 1 by the function Tmax(r).
Heating is applied to the patient using RF-applicator [12],
which is modeled through the actuator profiles B1(r) and
B2(r), see Fig. 1. Observe that the heat deposition is not
limited to the tumor region, this is also typically observed
in real-RF-based hyperthermia treatments. Healthy tissue
regions with high power deposition are typically referred to
as hot spots. These hot spots also motivate the use of control
strategies that explicitly include state constraints to ensure
patient safety. To ensure that the actuator applies no negative
heat load and respects power limits, the input constraints are
given by 0 ≤u1 ≤1 and 0 ≤u2 ≤1.
Next, we spatially and temporally discretize (30) and
(31), using a central-difference scheme and zero-order hold,
respectively, to obtain a model as in (1). Here, each element
of xk ∈Rn denotes a nodal temperature defined on an
equidistant grid of n points, i.e., {0,
1
n−1,
2
n−1, . . . , 1}. Note
that the case study will use a varying number of discretization
points n to demonstrate our ca-MPC framework.
In order to heat the tumor, we use a quadratic cost function
to track the reference xr illustrated in Fig. 1. The reference
xr and ur are obtained through an offline optimization
procedure to maximize the tumor temperature. The nominal
MPC setup is now given as
minimize
Uk
P10
i=1 ∥xi|k −xr∥2
2 + ∥ui−1|k −ur∥2
2,
(32a)
subject to
Xk = Φxk + ΓUk,
(32b)
xi|k ≤Tmax,
i = 1, . . . , N −1,
(32c)
xN|k ≤Tterminal,
(32d)
0 ≤ui|k ≤1,
i = 0, . . . , N −1.
(32e)
Here, Tmax ∈Rn denotes the spatially discrete temperature
constraint, see Fig. 1. The terminal set constraint (32d)
maximizes ∥Tterminal∥1 while satisfying (A −I)Tterminal ≤0
and Tterminal ≤Tmax to ensure positive invariance with
auxiliary input u = 0. For technical details we refer the
interested reader to [18].
Fig. 1.
Temperature constraint Tmax(r) (
), terminal constraint
Tterminal(r) (
), the state reference xr (
), and the distributed source
B1(r) (
), and B2(r) (
), for r ∈[0, 1].
B. ca-MPC setup
We approximate the forward and backward reachable sets
using axis-aligned boxes and exploit the observation that our
model (30) is a positive system. As a result, the forward
reachable sets are outer-approximated by
−→
Ri(0, U) := {x ∈Rn | 0 ≤x ≤Pi−1
k=0 AkB1}.
(33)
Here, 1 ∈R2 denotes a column of ones. Moreover, note that
(33) can be trivially transformed to (20b). Conceptually, (33)
denotes a set based on the maximum temperature that can
be achieved with both inputs. Next, the backward reachable
set is approximated by
←−
Ri(XT , 0) := {x ∈Rn | 0 ≤xj ≤Tj,terminal + δi,j,
(34)
for j = 1, . . . , n},
where δi,j :=
max
δ
AN−iejδ≤(I−AN−i)Tterminal
and ej denotes the
j-th standard basis vector. Conceptually, (34) is the union of
maximum single-state perturbations that satisfy the terminal
set ater N −i time-steps with zero input, i.e., u = 0. Again,
(34) can be trivially transformed to (20b).
To obtain the cost function level set, we substitute (3b)
into the MPC cost function (32a), which yields
J(xk, Uk) = 1
2U ⊤
k GG⊤Uk + f ⊤(xk)Uk + c(xk), (35)
where G, f(xk), and c(xk) denote the respective ma-
trix, vector, and scalar obtained by rewriting (32). Given
an initial state xk
∈
Xf, and input sequence
˜Uk
∈
Uf,N(xk), the cost function level set is given by the ellipse
Ju(xk, ˜Uk) := E(Lk, qk) with Lk := G∥G⊤( ˜Uk −qk)∥−1
2
and qk := −(GG⊤)−1f(xk).
Our framework allows for any feasible input sequence
˜Uk ∈Uf,N(xk), but a natural choice is a shifted version of
the previous optimal sequence and appended by the auxiliary
control law, ˜Uk = [u⋆⊤
1|k−1 . . . u⋆⊤
N−1|k−1 0⊤]⊤. Crucially,
note that ˜Uk ensures feasibility as the terminal set was
chosen to be positively invariant for u = 0.
For efficiency reasons, we sequentially remove state con-
straints for each time step and the forward-, backward-, and
cost function level set, as mentioned in (28) and (29). More
specifically, we compute each reduced constraint set Xred
i
for
i = 1, . . . , N −1 using
Ai = {j ∈N[1,nx] | ¬

MB(cj, bj, −→
Ri)∨
(36a)
MB(cj, bj, ←−
Ri) ∨ME(ˆcj,i,ˆbj,i, Ju(xk, ˜Uk))

}, (36b)
and for i = N,
AN = {j ∈N[1,nT ] | ¬

MB(cT,j, bT,j, −→
RN)∨
(36c)
ME(ˆcT,j,ˆbT,j, Ju(xk, ˜Uk))

}.
(36d)
Here cj, bj, cT,j, bT,j denote the state constraints x ≤Tmax
and x ≤Tterminal written as Cx ≤b and CT x ≤bT ,
respectively. The operator ∨, denotes the logical OR, and ¬
the logical NOT. For (36b) and (36d), ˆcj,i and ˆbj,i denote the
state constraint cjxi|k ≤bj at time i as ˆcj,iUk ≤ˆbj,i using
(3b). This allows for ME(·) to be evaluated using the Nm-
dimensional Uk-space in contrast to the Nn-dimensional
Xk-space, which is typically faster when m < n.
C. Results
To illustrate the obtained computational improvements we
compare the maximum computation time of our proposed ca-
MPC framework with respect to a standard MPC setup, with
an increasing number of states n ∈[100, 2000]. Addition-
ally, for our proposed method, we differentiate between the
computation time of the pre-solve and quadratic program to
provide insight in the overhead of our method. In Fig. 2, the
resulting computation time is shown. Clearly, our framework
can achieve speedups of two-orders of magnitude. Moreover,
the overhead from the pre-solve step scales well with an
increasing number of constraints.
Finally, in Fig. 3 the computation time as well as the
percentage of total constraints are shown for a single ca-MPC
simulation with n = 2000. Here, the adaptive nature of the
method is clearly seen as the number of included constraints
varies during the simulation. During the first 30 seconds,
barely any constraints are included as the state cannot reach
the constraints within the prediction horizon. Hereafter, the
system approaches the temperature constraints, which results
in the need to include more constraints as seen in Fig. 3.
Healthy tissue temperatures approaching the temperature
constraints are also typical for real hyperthermia treatments
due to the presence of hot spots. After approximately 60
seconds, the cost function level set starts to shrink as the
system approaches the steady-state reference. As result, more
constraints can be removed (due to the cost level set) even
though the constraints are approached even closer.
Fig. 2.
The maximum computation time of our constraint-adaptive MPC
method and a standard MPC for increasingly fine spatial discretizations. For
our framework the solver and pre-solve time are also shown.
Fig. 3.
Computation time for ca-MPC and the percentage of constraints
that are included in the MPC problem for n = 2000. The computation
time correlates well with the number of constraints. Moreover, the pre-
solve overhead remains approximately constant throughout the simulation.
VI. CONCLUSION AND OUTLOOK
In this paper, we presented a novel constraint-adaptive
MPC scheme that can enable real-time feasibility for sys-
tems with many state constraints. Crucially, our framework
guarantees the same closed-loop performance, recursive fea-
sibility and constraints satisfaction properties as the non-
reduced MPC scheme. The presented method exploits fast
outer approximation calculations of reachable sets as-well as
the cost function level set, to efficiently remove redundant
constraints in an online setting. Moreover, the majority of
the computational complexity is offline by exploiting key
properties of reachable sets for LTI systems. Hence, we
believe the method is applicable to a large variety of systems
with many state constraints. A hyperthermia cancer treatment
case study demonstrated the benefits of ca-MPC showing up
to two orders of magnitude reduction in computation time
with respect to a standard MPC setup without loss of closed-
loop performance.
This paper focused on computationally cheap methods in
order to obtain low computational overhead for the constraint
removal pre-solve step. Clearly, less conservative checks
can be performed to remove more redundant constraints.
For example, state constraints that are not removed are
currently not used to identify more redundant constraints.
Furthermore, specific solver interactions with, e.g., interior-
point and active-set solvers are of interest. These are topics
for future work next to applying our framework to a full
(3D) application in simulation and experiments of a real
hyperthermia treatment.
REFERENCES
[1] D. Q. Mayne, “Model predictive control: Recent developments and
future promise,” Automatica, vol. 50, no. 12, pp. 2967–2986, 2014.
[2] A. Bemporad, F. Borrelli, and M. Morari, “Model predictive control
based on linear programming - the explicit solution,” IEEE Trans. on
Automatic Control, vol. 47, no. 12, pp. 1974–1985, 2002.
[3] S. Hovland, K. Willcox, and J. T. Gravdahl, “MPC for Large-
Scale Systems via Model Reduction and Multiparametric Quadratic
Programming,” in Conf. Decision and Control, 2006, pp. 3418–3423.
[4] W. Heemels, B. Genuit, and L. Lu, “Approximation of explicit model
predictive control using regular piecewise affine functions: an input-to-
state stability approach,” IET Control Theory & Applications, vol. 6,
no. 8, pp. 1015–1028, 2012.
[5] J. Jerez, E. Kerrigan, and G. Constantinides, “A condensed and sparse
QP formulation for predictive control,” in Conf. Decision and Control
and European Control Conf., 2011, pp. 5217–5222.
[6] J. Rawlings, D. Mayne, and M. Diehl, Model Predictive Control:
Theory, Computation, and Design, 2nd ed. Nob Hill, 2019.
[7] S. Paulraj and P. Sumathi, “A Comparative Study of Redundant
Constraints Identification Methods in Linear Programming Problems,”
Mathematical Problems in Engineering, pp. 1–16, 2010.
[8] M. Jost and M. M¨onnigmann, “Accelerating model predictive control
by online constraint removal,” in Conf. Decision and Control, vol. 35,
2013, pp. 5764–5769.
[9] M. Jost, G. Pannocchia, and M. M¨onnigmann, “Online constraint
removal: Accelerating MPC with a Lyapunov function,” Automatica,
vol. 57, pp. 164–169, 2015.
[10] S. Nouwens, B. de Jager, M. Paulides, and W. Heemels, “Constraint-
adaptive MPC for large-scale systems: Satisfying state constraints
without imposing them,” in IFAC Conf. on Nonlinear Model Predictive
Control, vol. 54, 2021, pp. 232–237.
[11] D. Deenen, B. Maljaars, L. Sebeke, B. de Jager, E. Heijman, H. Grull,
and W. Heemels, “Offset-Free Model Predictive Temperature Control
for Ultrasound-Based Hyperthermia Cancer Treatments,” IEEE Trans.
on Control Systems Technology, pp. 1–15, 2020.
[12] R. Hendrikx, S. Curto, B. De Jager, E. Maljaars, G. Van Rhoon,
M. Paulides, and W. Heemels, “POD-Based Recursive Temperature
Estimation for MR-Guided RF Hyperthermia Cancer Treatment: A
Pilot Study,” in Conf. Decision and Control, 2018, pp. 5201–5208.
[13] J. van der Zee, “Heating the patient: A promising approach?” Annals
of Oncology, vol. 13, no. 8, pp. 1173–1184, 2002.
[14] D. Hensley, R. Orendorff, E. Yu, C. Danielson, V. Salgaonkar, and
C. Diederich, “Model predictive control for treating cancer with
ultrasonic heating,” in Am. Control Conf., 2015, pp. 220–225.
[15] S. Boyd and L. Vandenberghe, Convex optimization, 7th ed.
Cam-
bridge: Cambridge University Press, 2009.
[16] A. Halder, “Smallest Ellipsoid Containing p-Sum of Ellipsoids with
Application to Reachability Analysis,” arXiv, Jun 2018.
[17] P. S. Yarmolenko, E. J. Moon, C. Landon, A. Manzoor, D. W.
Hochman, B. L. Viglianti, and M. W. Dewhirst, “Thresholds for
thermal damage to normal tissues: An update,” International Journal
of Hyperthermia, pp. 320–343, 2011.
[18] G. Bitsoris, “Positively invariant polyhedral sets of discrete-time linear
systems,” International Journal of Control, pp. 1713–1726, 1988.
