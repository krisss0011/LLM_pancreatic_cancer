Approximate Kalman filtering for large-scale systems
with an application to hyperthermia cancer treatments
S.A.N. Nouwens1, B. de Jager1, M.M. Paulides2,3, W.P.M.H. Heemels1
©2022 IEEE. Personal use of this material is permitted. Permission from IEEE must be obtained for all other uses, in any current or future media, including
reprinting/republishing this material for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or
reuse of any copyrighted component of this work in other works. DOI: 10.1109/CDC51059.2022.9992615
Abstract— Accurate state estimates are required for increas-
ingly complex systems, to enable, for example, feedback control.
However, available state estimation schemes are not necessarily
real-time feasible for certain large-scale systems. Therefore,
we develop in this paper, a real-time feasible state-estimation
scheme for a class of large-scale systems that approximates the
steady state Kalman filter. In particular, we focus on systems
where the state-vector is the result of discretizing the spatial
domain, as typically seen in Partial Differential Equations. In
such cases, the correlation between states in the state-vector
often have an intuitive interpretation on the spatial domain,
which can be exploited to obtain a significant reduction in
computational complexity, while still providing accurate state
estimates. We illustrate these strengths of our method through
a hyperthermia cancer treatment case study. The results of the
case study show significant improvements in the computation
time, while simultaneously obtaining good state estimates, when
compared to Ensemble Kalman filters and Kalman filters using
reduced-order models.
I. INTRODUCTION
State estimation for large-scale systems is often character-
ized by a trade-off between computational complexity of the
estimation algorithm and the quality of the resulting state
estimate. Indeed many schemes, included the ones in [1]–[3]
strive to approximate the Kalman filter, given its optimality as
the minimum variance estimator in a linear stochastic setting
[4]. However, the computational complexity of the estimator
is limited when the state estimates are used in real-time, e.g.,
for state-based controllers, such as, MPC [5]. As a result, the
state estimate (and control action) must be computed within
the sample time, which restricts the applicability of certain
state estimation schemes for large-scale systems.
In this paper, we, therefore, propose a state estimator for
a class of large-scale systems that strives to approximate
the steady state Kalman filter, while simultaneously being
computationally tractable. In particular, we focus on systems
derived from Partial Differential Equations (PDEs). For
these systems, the state-vector typically has an intuitive
interpretation on the spatial domain. This strong link to the
spatial domain will be extensively exploited to improve the
computational aspects of our estimator. More specifically, we
will exploit the (often strong) spatial correlation between the
state elements on the spatial domain.
This research is supported by KWF Kankerbestrijding and NWO Domain
AES, as part of their joint strategic research programme: Technology for
Oncology II. The collaboration project is co-funded by the PPP Allowance
made available by Health∼Holland, Top Sector Life Sciences & Health, to
stimulate public-private partnerships.
1Control Systems Technology, Department of Mechanical Engineering,
Eindhoven University of Technology, Eindhoven, The Netherlands
2Electromagnetics for Care & Cure, Department of Electrical Engineering,
Eindhoven University of Technology, Eindhoven, The Netherlands
3Department of Radiotherapy, Erasmus University Medical Center Cancer
Institute, Rotterdam, The Netherlands
We will show the strengths of our method using a hyper-
thermia cancer treatment case study [6]–[9], which inspired
this work, as we observed the computational complexity
of standard Kalman filter-based estimators in this setting.
Employing model-based estimators to improve Magnetic
Resonance Thermometry (MRT) has been investigated already
in literature. For example, in [10], a Kalman filter was used
for models of small tumors. In [8], [9] a Kalman filter using a
reduced-order model (ROM) was proposed. However, ROM-
based Kalman filters are not easy to design and can suffer
from long range spurious correlations [1]. In [11], a simple
Luenberger observer is used. The full state measurements
in [11] enable an easy to design diagonal innovation gain.
However, this simple design does not exploit the strong spatial
correlations in the temperature field. In this paper, we will
compare our method to several well-known Kalman filter
approximations and the Luenberger observer. Our method
strives to accurately estimate states for large models, e.g.,
with 106 states and a computation time in the order of
1 −10 seconds by bridging the gap between computationally
intensive Kalman filter and the simple Luenberger observer.
We achieve this by interpreting the steady state Kalman filter
as a kernel regularized optimization problem. Additionally,
we will experimentally show the strengths of our method on
an actual hyperthermia treatment setup.
The remainder of this paper is structured as follows. In
Section II, we introduce the problem and several well-known
state estimators. In Section III, we present our proposed state
estimation scheme. In Section IV, we compare our method
against the introduced state estimators using a hyperthermia
cancer treatment case-study. Last, in Section V, we provide
our conclusions and give an outlook for future work.
II. PRELIMINARIES
In this section, we start by introducing the system. Here-
after, we summarize the Ensemble Kalman filter, reduced-
order model Kalman filter, and Luenberger observer, as
these form benchmarks used to compare our newly proposed
estimation scheme to.
A. System class
In this paper, we consider the discrete-time linear time-
invariant (LTI) system
xk+1 = Axk + Buk + wk,
wk ∼N(0, Q),
(1a)
yk = Cxk + ηk,
ηk ∼N(0, R),
(1b)
where xk ∈Rnx, yk ∈Rny, uk ∈Rnu denote the state,
output, and input, respectively, at time k ∈N. Additionally,
wk ∈Rnx and ηk ∈Rny denote the zero mean Gaussian
distributed process and measurement noise with covariance
arXiv:2410.17643v1  [eess.SY]  23 Oct 2024
Q and R, respectively. Moreover, A, B, and C are matrices
of appropriate dimensions. Recall that we focus on the case
where xk ∈Rnx with nx ≫1 and where the elements of xk
are the result of a spatial discretization, i.e., the i-th element
is given by x(i)
k
= xk(ri) with xk : D →R and ri ∈D for
i = 1, . . . , nx, where D ⊂RD denotes the spatial domain.
Below, we review existing observer schemes. In particular
for large-scale systems, the observers in Sections II-B, II-C,
and III require two assumptions.
• R−1v and R−⊤v are computationally cheap.
• Cv and C⊤v are computationally cheap.
A typical R, that satisfies the first assumption results from
uncorrelated measurement noise, i.e., R is diagonal.
B. Ensemble Kalman filter
The Ensemble Kalman filter (EnKF) [1] strives to rep-
resent the state estimate covariance by an ensemble of
state estimates, i.e., Var(ˆxk)
≈
¯
Xk ¯
X⊤
k
with
¯
Xk
:=
1
√N−1
 h
x⟨1⟩
k
. . . x⟨N⟩
k
i
−1
N
PN
j=1 x⟨j⟩
k

. Here, ˆxk denotes
the state estimate and x⟨j⟩
k
∈Rnx refers to the j-th ensemble
member and its evolution is given by
x⟨j⟩
k
= Aˆx⟨j⟩
k−1 + Buk−1 + w⟨j⟩
k ,
(2)
where w⟨j⟩
k
is a particular process noise realization. When
the ensemble is sufficiently large, the statistical properties of
¯
Xk ¯
X⊤
k approximate the true covariance well.
The EnKF updates its ensemble using
ˆx⟨j⟩
k
= x⟨j⟩
k
+ ¯
Xk ¯Y ⊤
k R−1
(3)
(I −¯Yk(I + ¯Y ⊤
k R−1 ¯Yk)−1 ¯Y ⊤
k R−1)([yk . . . yk] −¯Yk),
where ¯Yk = C ¯
Xk. Observe that (3) uses the assumptions in
Section II-A in order to reduce the computational complexity
of the matrix inverse using the Woodbury identity [12]. To
obtain a single state estimate from the ensemble, one can
simply compute the mean, i.e., ˆxk = 1
N
PN
j=1 ˆx⟨j⟩
k . Note that
there are many variations on the EnKF tailored to specific
systems, see [1] and the references therein.
We summarized the computational complexity of each step
for the EnKF in Table I. Observe that the computational
complexity is dominated by O(Nn2
x) for large-scale systems
(typically N ≪nx). Indeed, propagating the ensemble using
(2) proved to be computationally intensive, see Section IV.
C. Reduced-order model Kalman filter
Large-scale systems are often well-described by smaller
ROMs [13], [14]. To this end, it is possible to rewrite the
full-order Kalman filter using the ROM given by
zk+1 = Arzk + Bruk + V wk,
(4a)
yk = Crzk + ηk,
(4b)
where zk := V xk ∈Rnr is the reduced-order state vector
with nr ≪nx and V is the projection matrix that satisfies
V ⊤V = I. The Kalman filter using the ROM is given by
¯zk = Arˆzk−1 + Bruk−1,
(5a)
¯
Pk = ArPk−1A⊤
r + V ⊤QV ,
(5b)
Kk = (CrR−1C⊤
r + ¯
P −1
k
)−1C⊤
r R−1,
(5c)
ˆzk = ¯zk + Kk(¯zk −yk),
(5d)
Pk = (I −KkC) ¯
Pk.
(5e)
Here, ¯zk and ˆzk denote the predicted and estimated state,
respectively. Note that we reduce the computational complex-
ity of (5c) using the Woodbury identity [12]. Crucially, by
projecting Q to the reduced-order state space, it is likely
that part of the process noise is not well described by the
reduced-order Kalman filter (ROM-KF).
The computational complexity for the ROM-KF is provided
in Table I. Note that for nr ≪nx, the computational
complexity is small, even when the original system is large.
D. Luenberger observer
Last, we introduce the Luenberger observer
¯xk = Aˆxk−1 + Buk−1,
(6a)
ˆxk = ¯xk + KLuenberger(C¯xk −yk),
(6b)
where KLuenberger is the user-designed innovation gain.
For large-scale systems with full state measurements, i.e.,
C = I, as seen in some hyperthermia cancer treatments
[11], [15], an easy-to-design Luenberger observer uses a
diagonal innovation gain, i.e., KLuenberger is diagonal. We
summarized the computational complexity of (6) when C =
I and KLuenberger is diagonal in Table I. Observe that the
computational complexity is dominated by propagating the
state forward in time when KLuenberger is sufficiently sparse.
TABLE I: Computational complexity of the observers in
Sections II-B to II-D
Equation
(2)
(3)
(5a)
(5b)
(5c)
Complexity
O(Nn2
x)
O(N 3)
O(n2
r)
O(n3
r)
O(n3
r)
Equation
(5d)
(5e)
(6a)
(6b)
Complexity
O(nrny)
O(n2
rny)
O(n2
x)
O(nx)
III. APPROXIMATE KALMAN FILTERING FOR
LARGE-SCALE SYSTEMS
In this section, we present our proposed approximate
Kalman filter that is computationally efficient, intuitive to
design, and can provide accurate state estimates, which we
will refer to as the least-squares kernel Kalman filter (LSK-
KF). To this end, we first introduce an equivalent least-squares
form of the Kalman filter [16]. Hereafter, we present our key
insights that enable the efficient computation of the least-
squares minimization problem for large-scale systems.
A. Least-squares Kalman filter
The least-squares minimization problem that is equivalent
to the Kalman filter is
¯xk =Aˆxk−1 + Buk−1,
(7a)
ˆxk =¯xk + dk,
(7b)
dk :=arg min
d
∥d∥2
P −1
k
+ ∥yk −C¯xk −Cd∥2
R−1
(7c)
with ∥v∥2
M := v⊤Mv. Note that (7) describes the update for
the state estimate ˆxk but not for the state estimate covariance
Pk. As a result, (7) is often used with a static Pk, i.e.,
Pk = P for all k ∈N, as is the case in the steady state
Kalman filter, see, e.g., [3]. Despite a static state estimate
covariance, storing and computing products with P is not
tractable when nx ≫1. Moreover, P is often ill-conditioned.
Hence, solving (7) can be extremely challenging, especially
when the estimator has to be used in real-time applications.
B. Key concept
To solve the issue that (7) is computationally challenging,
we can decompose P as P = P
1
2 P
1
2 [2]. This decomposition
facilitates the coordinate change d = P
1
2 f, which can be
used to pre-condition (7). Note this change of coordinates
simultaneously avoids the inversion of P and improves the
conditioning of the optimization problem, as we will see.
In our work, we generalize this idea to the decomposition
P = LL⊤, where L can be any matrix for which matrix-
vector products Lv and L⊤v can be computed efficiently.
Intuitively, directly designing P is analogous to kernel
regularization methods, where the kernel specifies desired
properties of d in (7) [17]. Hence, we will refer to this
method as the least-squares kernel Kalman filter (LSK-KF),
as it utilizes a kernel to efficiently approximate the least-
squares form of the Kalman filter. Substituting the dk = Lfk
and P = LL⊤(with Pk = P ) into (7b) and (7c) yields
ˆxk =¯xk + Lfk,
(8a)
fk :=arg min
f
∥f∥2
2 + ∥yk −C¯xk −CLf∥2
R−1.
(8b)
As we will see, interpreting (8b) (and also (7)) as a kernel-
regularized least-squares problem will provide insight into
the design of LL⊤. We compute (8b) by solving for the first-
order optimality conditions, i.e., the gradient of (8b) with
respect to f being zero. This yields the equality
f + L⊤C⊤R−1CLf = L⊤C⊤R−1(yk −C¯xk),
(9)
which can be efficiently solved with iterative linear solvers,
such as, for example, the Conjugate Gradient (CG) method
[18]. Solving (9) efficiently with iterative linear solvers
requires that the matrix-vector products R−1v, Cv, C⊤v,
Lv, and L⊤v are computationally cheap (for a v of
appropriate dimension). This observation also follows from
the computational complexity of CG, which is O(c√κ),
where c denotes the complexity of the matrix-vector products
with f in (9) and κ the condition number of (8b) [18].
C. Choosing L
The insight that (7) can be efficiently solved by decompos-
ing a static P as LL⊤, does not solve the problem of choosing
an appropriate L. In order for LSK-KF to approximate the
steady state Kalman-filter, we identified two crucial properties
• LL⊤approximates the asymptotic state estimate covari-
ance of the steady state Kalman filter.
• Matrix-vector products Lv and L⊤v must be computa-
tionally cheap.
In order to satisfy these two assumptions, we propose to
design L as compositions and linear combinations of so-
called “building blocks”. A crucial property of a “building
block” is that matrix-vector products are efficient and have an
interpretation on the spatial domain, e.g., spatial smoothing.
The interpretation on the spatial domain will be used at the
end of this section as a design tool to visualize the covariance
LL⊤, and thus the properties of the resulting state estimator.
In Table II, we provide a selection of building blocks
that can be used to construct L using linear combinations or
compositions. We will start by introducing one building block
in detail. Suppose v ∈Rn is the result of spatially discretizing
v : D →R on {r1, . . . , rn} ⊂D, i.e., v(i) := v(ri) for
i = 1, . . . , n. Then, we can approximate the convolution
(l ∗v)(r) :=
R
D l(r −r′)v(r′)dr′, with l : D →R,
by the matrix-vector product, Lv where L ∈Rn×n and
L(i,j) = l(ri −rj). The key insight is to evaluate Lv
on the spatial domain using (with some abuse of notation)
(l∗v)(r) = F−1(F(l)F(v))(r), where F denotes the Fourier
transform. In fact, the computational complexity of the matrix-
vector product Lv is generally O(n2), but when Lv can
be computed using the Fast Fourier Transform (FFT), it is
reduced to O(n log(n)) [19]. Clearly, some matrix-vector
products Lv allow for efficient implementation without
explicitly constructing L. We will refer to such matrix-vector
products, as matrix-free matrix-vector products.
The remaining building blocks are the following. Multiply-
ing two functions on D, which is equivalent to a matrix-
vector product with a diagonal matrix, and can be thus
computed with element-wise multiplications. The convolution
with a separable kernel
R
D l(r, r′)v(r′)dr′, with l(ri, rj) =
QD
d=1 ld(r(d)
i
, r(d)
j ), which is equivalent to the matrix-vector
product where L is the result of a Kronecker product, i.e.,
L = ND
d=1 Ld with Ld ∈Rnd for d = 1, . . . , D. This
matrix-vector product can be efficiently computed using fast
tensor products [20]. Observe that all building blocks have
an intuitive interpretation on the spatial domain, which helps
in designing an appropriate L, as we will see.
TABLE II: A selection of matrix-vector products Lv and
F v := L⊤v with efficient matrix-free implementations.
Matrix L
Interpretation of Lv on D
Complexity
L(i,i) = l(ri)
l(r)v(r)
O(n)
L(i,j) = l(ri −rj)
l(r) ∗v(r)
O(n log(n))
L = ND
d=1 Ld
QD
d=1 ld(r(d)
i
, r(d)
j ) ∗v(r)
O(n PD
d=1 nd)
Matrix F
Interpretation of F v on D
Complexity
F (i,i) = l(ri)
l(r)v(r)
O(n)
F (i,j) = l(rj −ri)
l(−r) ∗v(r)
O(n log(n))
F = ND
d=1 L⊤
d
QD
d=1 ld(r(d)
j , r(d)
i
) ∗v(r)
O(n PD
d=1 nd)
Besides computational efficient matrix-vector products, we
need to design an appropriate L such that LL⊤approximates
the state estimate covariance of the steady state Kalman
filter. Clearly, due to the size of LL⊤, inspecting the matrix
itself is prohibitively difficult. Therefore, we propose using
the conditional expected value to evaluate LL⊤. More
specifically, when

va
vb

∼N

0,
 Pa
Pc
P ⊤
c
Pb

,
(10)
the conditional expected value is given by
E(va | vb) = PcP −1
b
vb
(11)
and expresses the expected value of va conditioned on vb.
First of all, visualizing E(va | vb) on the spatial domain
will show the correlation of va with vb, which is useful as
LL⊤can be interpreted as a regularization kernel. Hence,
visualizing E(va | vb) will show state distributions that are
associated with a low cost, i.e., state distributions that are
promoted by (8b). As a result, the conditional expected value
is a useful design tool in designing an appropriate L by,
for example, mimicking the steady state Kalman filter from
a small-scale model. We will show how to utilize E(va |
vb) in designing L using our hyperthermia case study in
Section IV. Last, observe that (11) is easy to compute with
matrix-vector products when vb ∈R by using

P ⊤
c
Pb
⊤=
LL⊤0
0
. . .
1⊤.
IV. EXPERIMENTAL RESULTS
In this section, we demonstrate the proposed LSK-KF
observer by comparing the state estimates with the observers
introduced in Section II using a hyperthermia cancer treatment
case-study. Hereto, we first introduce the experimental setup
used in actual hyperthermia treatments. Hereafter, we define
the state observers, and last, the performance of each observer
is quantified by means of the computation time and the state
estimation error.
A. Experiment setup
We experimentally validate the observers in Sections II and
III using an anthropomorphic phantom of the pelvic region
to mimic a typical deep hyperthermia treatment, see [9]. A
voxel-based model of the phantom is shown in Figure 1. The
phantom and hyperthermia applicator can be modeled using
a Partial Differential Equation (PDE)
ρ(r)c(r) ˙T(r, t) = ∇· (k(r)∇T(r, t)) + q(r, t),
(12a)
for r ∈Ω⊂R3, with q(r, t) = b1(r)u1(t)+b2(r)u2(t) and
convective boundary condition
k(r)∇T(r, t) · n = hT(r, t),
(12b)
for r ∈∂Ω, where Ω= Ωsoft-tissue ∪Ωshell ∪Ωspine ∪Ωpelvis
denotes the phantom domain. Additionally, T, k, c, ρ, bi, ui
denote the temperature field with respect to room temperature,
thermal conductivity, heat capacity, density, i-th heat load, and
i-th input, respectively. We have two inputs ui as we consider
two RF-antenna inputs, i.e., right focus (corresponding to
b1(r)) and left focus (corresponding to b2(r)), see Figure 2.
The relevant material properties for (12) are given in [9].
Note that we consider temperatures with respect to a steady
state, hence, the temperature of the boundary condition is not
relevant for this demonstration.
After discretizing (12) in space on a well-chosen nodal
grid {r1, . . . , rnx} ⊂Ω(nx ≈106) and in time with a
sample time of 93 seconds (the time to acquire an MRI
scan), we obtain a discrete-time system in the form of (1)
with state vector xk :=
T(r1, tk)
. . .
T(rnx, tk)⊤and
tk = 93k, k ∈N. The output of (1) results from temperature
measurements using Magnetic Resonance Imaging (MRI)
by exploiting the temperature-dependent Proton Resonance
Frequency Shift (PRFS), see [9] and the references therein.
As a result, we define the i-th element of the output as
y(i)
k
:= T(rj, tk) for all rj ∈Ωsoft-tissue. Note that only the
soft tissue has a temperature-dependent PRFS. The variance
associated with the i-th output, i.e., R(i,i), is estimated from
the measurement data. We refer the interested reader to [8], [9]
for a more in-depth description of the phantom, corresponding
thermal model, and the temperature measurement using MRI.
To validate the estimated temperature (using any observer),
six temperature probes are inserted in the center transversal
slice of the phantom using catheter tracks, see Figure 3 for
the probe locations. These probes serve as a spatially sparse
ground truth temperature with a resolution of 0.1◦C and
accuracy ≤0.1◦C. During an experiment of approximately
30 minutes, two sets of inputs are applied to the phantom.
The experiment sequence is given by (13). Both inputs apply
approximately 200 W to the phantom.
u1(tk) = 1 if (2 ≤k ≤7), and
0, otherwise,
(13a)
u2(tk) = 1 if (8 ≤k ≤15), and
0, otherwise.
(13b)
Fig. 1: Transparent front view of the phantom model (left) and a
phantom model placed in the applicator (right).
(a) Right focus b1(r)
(b) Left focus b2(r)
Fig. 2: Model-based heat loads b1(r) and b2(r) on the central
transversal slice.
(a) MRI scan
1
2
3
4
5
6
(b) Model
Fig. 3: Temperature probe locations on the central transversal slice
of the phantom and model. The white and gray regions in Figure 3b
denote the pelvis and soft-tissue, respectively.
B. LSK-KF design
In this section, we present the design of the LSK-KF
observer tailored to the anthropomorphic phantom model
(12). For this particular model, we design L such that we
obtain strong spatial correlations between nearby states within
the same material and weak correlation between different
materials. This insight was obtained by solving the discrete-
time algebraic Riccati equations to obtain the steady state
Kalman filter for a small-scale thermal model analogous to
(12). Hereto, we choose L such that the matrix-vector product
d = Lv with d(i) = d(ri) for i = 1, . . . , nx is given by
d(r) =
2
X
i=1
φi(r)(k(r) ∗(φi(r)v(r))),
(14a)
φi(r) =
(
1,
if r ∈Ωi
0,
otherwise , k(r) = γeσ−2∥r∥2
2.
(14b)
Here, Ω1 = Ωsoft-tissue and Ω2 = Ωshell ∪Ωspine ∪Ωpelvis.
Note that for this particular choice L in (14), we have
Lv = L⊤v. In (14), we designed the parameters γ and
σ to match the small-scale steady state Kalman filter by
using the conditional expected value (11). Observe that the
computational complexity of the matrix-vector product (14)
scales with O(nx log(nx)), when the convolution with k(r)
is implemented using the FFT [19].
In Figure 4, we demonstrate the conditional expected value
for two different state elements, one in the soft-tissue material
and one in the plastic pelvis. From Figure 4, we conclude that
our proposed design (14) indeed achieves strong, localized,
spatial correlations within a single material and no correlation
between different materials, as was observed from the steady
state Kalman filter using the small-scale model.
(a) Conditioned on soft-tissue
(b) Conditioned on pelvis
Fig. 4: Conditional expected value conditioned on a state in the
soft-tissue (a) and a state in the pelvis (b).
C. Observer definitions
In this section, we briefly present the designs for the
observers from Section II. First, for the EnKF, we compute
the process noise realization as w = Lv with v ∼N(0, I)
and L as in (14). To evaluated the EnKF we use two ensemble
sizes of N = 20 and N = 100, respectively. As we will see,
the computational tractability of the EnKF will be limited by
the ensemble size.
Second, the model (12) and corresponding V used in
the ROM-KF (5a) is computed using data-driven balanced
truncation, and truncating the singular values to include 99.9%
of the energy [14]. The resulting model is of dimension
nr = 10. This significant reduction in model order is largely
the result of the fact that the model has only two inputs. The
reduced-order process noise is estimated by projecting LL⊤
onto the reduced-order subspace, i.e., Qr := (LV )⊤(LV ),
where LV can be efficiently computed as V has few columns.
Last, the diagonal gain for the Luenberger observer is
designed as KLuenberger := C⊤D with D(i,i) =
d
d+R(i,i) .
Here, d ∈R is chosen as d =
1
nx trace(W W ⊤) and W :=

w⟨1⟩
. . .
w⟨500⟩
, where w⟨i⟩is the same as for the
EnKF. As a result, d models the approximate uncertainty of
the state estimate for all states.
D. Results
Figure 5 presents the estimated temperature for each
observer at the probe locations together with the probe mea-
surements. For a visual comparison between the estimators
and the measured temperature, a transversal slice is shown in
Figure 6. Here, it is clear that that both EnKF estimators have
significant temperature irregularities, which are not physically
motivated. In the Luenberger observer, the spatially high
frequent noise is slightly attenuated, which shows that the
spatial correlation between states is not exploited. Both the
ROM-KF and the LSK-KF show spatially smooth temperature
fields, indicating that the spatial correlation is exploited.
The results from Figure 5 are summarized in Table III
using the Root Means Square (RMS) error, the computation
time, and the approximate standard deviation of the estimator
error for the last two time-steps. The approximate standard
deviation of the estimator error assumes the state estimate is
given by ˆxk = xk+ek where xk is the true state and ek is the
estimator error, which is assumed IID. Given this assumption,
when xk ≈xk+1, we can approximate the standard deviation
of the elements in ek using
STD(ek) ≈
√
2
2

1
nx−1
nx
X
i=1
(ˆx(i)
k −ˆx(i)
k+1 −µ)21/2
(15)
with µ =
1
nx
Pnx
i=1 ˆx(i)
k −ˆx(i)
k+1. Note that
√
2
2
corrects the
standard deviation as both state estimates xk and xk+1 have
an estimation error.
From Table III, it is clear that our LSK-KF observer agrees
well with the probe data that serve as a ground truth while
simultaneously being computationally attractive, even for a
model with 106 states. Based on the approximate standard
deviation in Table III, we observe that two consecutive state
estimates show little variation when the temperature field is
approximately constant between the two time-steps.
With regard to the other state estimation schemes, the
EnKF proved to be computationally intractable, even for
modest ensemble sizes. As a result of the modest ensemble
size, the state estimates do not agree well with the probes.
The ROM-KF, agrees reasonably well with the probes and is
computationally cheap. However, we observed that the mode
shapes in the projection matrix V are not “rich” enough
to describe the required temperature field as there there are
significant low frequency spatial correlations in the difference
between the measurement and the estimated state. Including
more reduced-order states to ROM-KF might solve this
problem, but finding relevant modes shapes to extend the
ROM-KF is not trivial. The Luenberger observer showed good
agreement with the probes, is computationally attractive, but
has a higher standard deviation, which is also seen by the
spatially high frequent noise in Figure 6.
TABLE III: RMS error of the state estimate relative to the
probe measurement, mean computation time, and standard
deviation for each observer.
LSK-KF
EnKF
N = 20
EnKF
N = 100
ROM-KF
Luenberger
RMS probe 1
0.33
0.74
0.49
0.54
0.28
RMS probe 2
0.22
0.41
0.33
0.19
0.28
RMS probe 3
0.39
0.60
0.26
0.40
0.31
RMS probe 4
0.21
1.04
0.45
0.56
0.25
RMS probe 5
0.31
1.56
0.93
0.47
0.38
RMS probe 6
0.81
1.29
1.13
1.34
0.70
RMS Total
0.43
1.02
0.65
0.69
0.41
Time [s]
7.21
40.7
200.8
0.05
2.13
STD(e17)
0.05
0.13
0.17
0.03
0.12
V. CONCLUSION AND OUTLOOK
In this paper, we presented a computationally attractive
state estimation framework for large-scale systems, that is
particularly useful for systems derived from partial differential
equations. In fact, the proposed LSK-KF can approximate
the steady state Kalman filter by approximating the state
Fig. 5: Probe temperature and estimated temperature at the probe locations for different observers.
(a) Measurment
(b) LSK-KF
(c) EnKF N = 20
(d) EnKF N = 100
(e) ROM-KF
(f) Luenberger
Fig. 6: Temperature measurement and estimates at t = 1674 seconds
on the transversal slice centered in the phantom. In Figure 6a, gray
areas denote regions with no measurement.
estimate covariance using computationally attractive building
blocks. These building blocks exploit the observation that
some matrix-vector products can be efficiently evaluated
on the spatial domain. We also proposed the use of the
conditional expected value as a computationally efficient tool
to design the observer.
A hyperthermia cancer treatment case study demonstrated
the strengths of our estimator. We observed a good correlation
to thermal probes, while simultaneously having a low com-
putational complexity. Moreover, we showed how insights
obtained from a small-scale model can be used to design the
state estimator using the conditional expected value.
This work can be extended in various directions. For in-
stance, expanding the library of building blocks, i.e., matrices
with computationally attractive matrix-vector products, is
of interest. Additionally, further automating the observer
design procedure including stability guarantees for large-
scale systems can even further improve the applicability of
this work.
REFERENCES
[1] G. Evensen, “The Ensemble Kalman Filter: theoretical formulation
and practical implementation,” Ocean Dyn., pp. 343–367, 2003.
[2] S. A. Haben, A. Lawless, and N. Nichols, “Conditioning of incremental
variational data assimilation, with application to the Met Office system,”
Tellus A Dyn. Meteorol. Oceanogr., pp. 782–792, 2011.
[3] D. M. Barker, W. Huang, Y. R. Guo, A. J. Bourgeois, and Q. N. Xiao,
“A three-dimensional variational data assimilation system for MM5:
Implementation and initial results,” Mon. Weather Rev., pp. 897–914,
2004.
[4] R. E. Kalman, “A New Approach to Linear Filtering and Prediction
Problems,” J. Basic Eng., pp. 35–45, 1960.
[5] D. Q. Mayne, “Model predictive control: Recent developments and
future promise,” Automatica, 2014.
[6] J. van der Zee, “Heating the patient: A promising approach?” Ann.
Oncol., pp. 1173–1184, 2002.
[7] M. Kroesen, et al., “Confirmation of thermal dose as a predictor of
local control in cervical carcinoma patients treated with state-of-the-art
radiation therapy and hyperthermia,” Radiother. Oncol., pp. 150–158,
2019.
[8] R. Hendrikx, et al., “POD-Based Recursive Temperature Estimation
for MR-Guided RF Hyperthermia Cancer Treatment: A Pilot Study,”
in Conf. Decis. Control, 2018, pp. 5201–5208.
[9] I. VilasBoas-Ribeiro, et al., “POD-Kalman filtering for improving non-
invasive 3D temperature monitoring in MR-guided hyperthermia,” Med
Phys., pp. 1–16, 2022.
[10] S. Roujol, B. D. de Senneville, S. Hey, C. Moonen, and M. Ries,
“Robust Adaptive Extended Kalman Filtering for Real Time MR-
Thermometry Guided HIFU Interventions,” IEEE Trans. Med. Imaging,
pp. 533–542, 2012.
[11] D. A. Deenen, et al., “Offset-Free Model Predictive Temperature
Control for Ultrasound-Based Hyperthermia Cancer Treatments,” IEEE
Trans. Control Syst. Technol., pp. 2351–2365, 2021.
[12] W. W. Hager, “Updating the Inverse of a Matrix,” SIAM Rev., pp.
221–239, 1989.
[13] A. C. Antoulas, Approximation of Large-Scale Dynamical Systems.
SIAM, 2005.
[14] C. W. Rowley, “Model Reduction for Fluids, using Balanced Proper
Orthogonal Decomposition,” Int. J. Bifurc. Chaos, pp. 997–1013, 2005.
[15] D. Hensley, R. Orendorff, E. Yu, C. Danielson, V. Salgaonkar, and
C. Diederich, “Model predictive control for treating cancer with
ultrasonic heating,” in Am. Control Conf., 2015, pp. 220–225.
[16] R. Nash, A. Gelb, and J. Kasper, Applied Optimal Estimation, 4th ed.
Cambridge (Mass.): MIT press, 1974.
[17] G. Pillonetto, F. Dinuzzo, T. Chen, G. De Nicolao, and L. Ljung,
“Kernel methods in system identification, machine learning and function
estimation: A survey,” Automatica, pp. 657–682, 2014.
[18] Y. Saad, Iterative Methods for Sparse Linear Systems.
Society for
Industrial and Applied Mathematics, 2003.
[19] J. W. Cooley and J. W. Tukey, “An algorithm for the machine
calculation of complex Fourier series,” Math. Comput., pp. 297–301,
1965.
[20] P. Fernandes, B. Plateau, and W. J. Stewart, “Efficient descriptor-vector
multiplications in stochastic automata networks,” J. ACM, pp. 381–414,
1998.
